[agent]
  round_interval = true
  metric_batch_size = 1000
  metric_buffer_limit = 10000
  collection_jitter = "0s"
  flush_interval = "10s"
  flush_jitter = "0s"
  precision = ""

  ## Log at debug level.
  # debug = false
  ## Log only error level messages.
  # quiet = false

  ## Override default hostname, if empty use os.Hostname()
  hostname = ""
  ## If set to true, do no set the "host" tag in the telegraf agent.
  omit_hostname = false


###############################################################################
#                            OUTPUT PLUGINS                                   #
###############################################################################


[[outputs.prometheus_client]]
  listen = ":9080"

  ## Metric version controls the mapping from Telegraf metrics into
  ## Prometheus format.  When using the prometheus input, use the same value in
  ## both plugins to ensure metrics are round-tripped without modification.
  ##
  ##   example: metric_version = 1; deprecated in 1.13
  ##            metric_version = 2; recommended version
  # metric_version = 1

# Host and VM
[[inputs.vsphere]]
  interval = "30s"

  vcenters = [ "https://10.226.68.190/sdk" ]
  username = "user@vsphere.local"
  password = "Password123!"

  ## VMs
  ## Typical VM metrics (if omitted or empty, all metrics are collected)
  # vm_include = [ "/*/vm/**"] # Inventory path to VMs to collect (by default all are collected)
  # vm_exclude = [] # Inventory paths to exclude
  vm_metric_include = [
    "cpu.usage.average",
    "cpu.latency.average",
    "cpu.readiness.average",
    "cpu.wait.summation",
    "mem.usage.average",
    "mem.swapinRate.average",
    "mem.swapoutRate.average",
    "net.bytesRx.average",
    "net.bytesTx.average",
    "net.droppedRx.summation",
    "net.droppedTx.summation",
    "net.packetsRx.summation",
    "net.packetsTx.summation",
    "virtualDisk.readOIO.latest",
    "virtualDisk.writeOIO.latest",
    "virtualDisk.read.average",
    "virtualDisk.write.average",
    "virtualDisk.numberReadAveraged.average",
    "virtualDisk.numberWriteAveraged.average",
    "virtualDisk.totalReadLatency.average",
    "virtualDisk.totalWriteLatency.average",
    "disk.read.average",
    "disk.write.average",
    "disk.commandsAveraged.average",
    "disk.commandsAborted.summation",
    "disk.numberReadAveraged.average",
    "disk.numberWriteAveraged.average",
    "disk.maxTotalLatency.latest",
    "datastore.read.average",
    "datastore.write.average",
    "datastore.totalReadLatency.average",
    "datastore.totalWriteLatency.average",
    "datastore.numberReadAveraged.average",
    "datastore.numberWriteAveraged.average",
  ]
  # vm_metric_exclude = [] ## Nothing is excluded by default
  # vm_instances = true ## true by default

  ## Hosts
  ## Typical host metrics (if omitted or empty, all metrics are collected)
  # host_include = [ "/*/host/**"] # Inventory path to hosts to collect (by default all are collected)
  # host_exclude [] # Inventory paths to exclude
  host_metric_include = [
    "cpu.utilization.average",
    "cpu.usage.average",
    "cpu.latency.average",
    "cpu.readiness.average",
    "cpu.wait.summation",
    "mem.usage.average",
    "mem.swapinRate.average",
    "mem.swapoutRate.average",
    "net.bytesRx.average",
    "net.bytesTx.average",
    "net.packetsRx.summation",
    "net.packetsTx.summation",
    "net.droppedRx.summation",
    "net.droppedTx.summation",
    "net.errorsRx.summation",
    "net.errorsTx.summation",
    "disk.read.average",
    "disk.write.average",
    "disk.numberReadAveraged.average",
    "disk.numberWriteAveraged.average",
    "disk.totalReadLatency.average",
    "disk.totalWriteLatency.average",
    "disk.commandsAveraged.average",
    "disk.commandsAborted.summation",
    "disk.maxTotalLatency.latest",
    "storageAdapter.read.average",
    "storageAdapter.write.average",
    "storageAdapter.numberReadAveraged.average",
    "storageAdapter.numberWriteAveraged.average",
    "storageAdapter.totalReadLatency.average",
    "storageAdapter.totalWriteLatency.average",
    "storageAdapter.queued.average",
    "datastore.commandsAborted.summation",
    "datastore.read.average",
    "datastore.write.average",
    "datastore.totalReadLatency.average",
    "datastore.totalWriteLatency.average",
    "datastore.numberReadAveraged.average",
    "datastore.numberWriteAveraged.average",
  ]
    ## Collect IP addresses? Valid values are "ipv4" and "ipv6"
  # ip_addresses = ["ipv6", "ipv4" ]

  cluster_metric_exclude = [ "*" ] ## Nothing excluded by default
  # datastore_metric_exclude = [ "*" ] ## Nothing excluded by default
  datacenter_metric_exclude = [ "*" ] ## Datacenters are not collected by default.

  ## number of objects to retreive per query for realtime resources (vms and hosts)
  ## set to 64 for vCenter 5.5 and 6.0 (default: 256)
  # max_query_objects = 256

  ## number of metrics to retreive per query for non-realtime resources (clusters and datastores)
  ## set to 64 for vCenter 5.5 and 6.0 (default: 256)
  # max_query_metrics = 256

  ## number of go routines to use for collection and discovery of objects and metrics
  # collect_concurrency = 1
  # discover_concurrency = 1

  ## the interval before (re)discovering objects subject to metrics collection (default: 300s)
  # object_discovery_interval = "300s"

  ## timeout applies to any of the api request made to vcenter
  # timeout = "60s"

  force_discover_on_init = true
  insecure_skip_verify = true
